services:
  # PostgreSQL Database
  akya-db:
    image: postgres:latest
    container_name: akya-db
    ports:
      - "5435:5432"  # Host portu ile container portunu eşliyoruz
    environment:
      - POSTGRES_USER=akyabutik_user
      - POSTGRES_PASSWORD=akyabutik_pass
      - POSTGRES_DB=akyabutik-db
    networks:
      - my-network
    volumes:
      - postgres_data_akyabutik:/var/lib/postgresql/data  # Veritabanı verilerini hostta sakla
    restart: unless-stopped  # Sistem yeniden başlarsa veri kaybolmaz

  # MinIO (Blob Storage)
  akya-blob-storage:
    image: 'bitnami/minio:latest'
    container_name: akya-blob-storage
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=akyabutik_user
      - MINIO_ROOT_PASSWORD=akyabutik_pass
    volumes:
      - minio_data_akyabutik:/data  # MinIO verilerini hostta sakla
    networks:
      - my-network
    restart: unless-stopped

  akya-api:
    build:
      context: .
    container_name: akya-api
    depends_on:
      - akya-db
      - akya-blob-storage
    ports:
      - "9090:8080"
    networks:
      - my-network
    restart: unless-stopped

volumes:
  postgres_data_akyabutik:  # PostgreSQL için volume tanımı
  minio_data_akyabutik:    # MinIO için volume tanımı

networks:
  my-network:
    driver: bridge  # Aynı ağda çalışan servisler birbirine erişebilsin